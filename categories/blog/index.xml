<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on Wil&#39;s blog</title>
    <link>https://wils0n.github.io/categories/blog/</link>
    <description>Recent content in blog on Wil&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 18 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://wils0n.github.io/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tips to use Latex for your Master Thesis</title>
      <link>https://wils0n.github.io/posts/tips-and-tricks-to-use-latex-for-your-thesis/</link>
      <pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/tips-and-tricks-to-use-latex-for-your-thesis/</guid>
      <description>Introduction: To use Latex without concerns about problems of installations or system operative compatibility, you should use an online editor like Overleaf.
Overleaf allows free registration with the option to share with 1 person that it can be your assessor in their free tier.
Requirements: To understand this tutorial we need basic knowledge about:
 Latex MS Word  Formulas: Normally to the project thesis we use ms word and then create your thesis.</description>
    </item>
    
    <item>
      <title>Learnings from the PSM Certification at Scrum.org</title>
      <link>https://wils0n.github.io/posts/learnings-from-the-psm-certification-at-scrum.org/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/learnings-from-the-psm-certification-at-scrum.org/</guid>
      <description>The daily scrum meetings are not reported events of tasks, status or to answer the 3 questions (what I did yesterday, what I do today and if I have any impediments), they are meetings to identify impediments and produce actionable plans for that day&amp;rsquo;s work. The daily scrum meetings are not to resolve problems, but to promote quick decision-making. The daily scrum meeting should not exceed the 15 minutes of duration.</description>
    </item>
    
    <item>
      <title>My shortcuts</title>
      <link>https://wils0n.github.io/posts/shortcuts-on-mac/</link>
      <pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/shortcuts-on-mac/</guid>
      <description>XCode Shortcuts    shortcut Description     Cmd + Shift + O open file by name.   Cmd + Shift + J show file in project tree.   Cmd + Shift + F search in the whole project.   Ctrl + I indent lines.    Open project or file with Visual Studio  open ~/.bash_profile or open ~/.zshrc Adding the next line  code () { VSCODE_CWD=&amp;#34;$PWD&amp;#34; open -n -b &amp;#34;com.</description>
    </item>
    
    <item>
      <title>Tips and tricks to get a Student Visa to study a master in Spain in COVID times</title>
      <link>https://wils0n.github.io/posts/tips-and-tricks-to-get-a-student-visa-to-study-a-master-in-spain-in-covid-times/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/tips-and-tricks-to-get-a-student-visa-to-study-a-master-in-spain-in-covid-times/</guid>
      <description>The first step for getting a student visa is to have an acceptance letter from a Spanish University. In my case, I applied to the 3 top universities in Computer Science and I was accepted by those. To get that you can do the following:
 A tip to be accepted by any university is to have some scientific publication in journals or conferences indexed in SCOPUS. Be in the upper third or fifth in your undergraduate studies.</description>
    </item>
    
    <item>
      <title>Estructura de datos lineales y no lineales</title>
      <link>https://wils0n.github.io/posts/estructura-de-datos-lineales-y-no-lineales/</link>
      <pubDate>Sun, 21 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/estructura-de-datos-lineales-y-no-lineales/</guid>
      <description>Introduction: La estructuras de datos es un medio para almacenar y organizar datos. Las diferentes estructuras de datos tienen diferentes ventajas. Por lo tanto, al diseñar un algoritmo, es importante elegir una estructura que permita una inserción, búsqueda, eliminación, consulta y / o actualización efectivas de acuerdo con los requisitos de su algoritmo.
  </description>
    </item>
    
    <item>
      <title>Code Coverage Reports in iOS Projects</title>
      <link>https://wils0n.github.io/posts/code-coverage-reports-in-ios-projects/</link>
      <pubDate>Sat, 17 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/code-coverage-reports-in-ios-projects/</guid>
      <description>Introduction: Code coverage is an important measure in the test phase of the life cycle of software development, which if our project has high test coverage suggests it has a low chance of containing undetected software bugs.
Requirements: To understand this tutorial we need knowledge about:
 Fastlane Unit test in ios projects Continuous integration (CI)  The Problem: In iOS projects, although XCode gives us code coverage measure, it isn’t practical to generate reports in continuous integration (CI), because we need some command line to use with a continuous integration service such as Jenkins, Travis or something similar.</description>
    </item>
    
    <item>
      <title>Manage UITextField with Combine framework and other techniques</title>
      <link>https://wils0n.github.io/posts/manage-textfield-with-combine-framework-and-other-techniques/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/manage-textfield-with-combine-framework-and-other-techniques/</guid>
      <description>Introduction: In this Tutorial, you’ll learn how to manage UITextFields changes using the Combine framework.
Currently, there are many ways to detect the changes of UITextFields:
 Delegate protocol  func textFieldShouldReturn(_ textField: UITextField) -&amp;gt; Bool { //do stuff return true } Selectors  textField.addTarget(self, action: #selector(ViewController.textFieldDidChange(_:)), for: .editingChanged) ... @objc func textFieldDidChange(_ textField: UITextField) { // do stuff } We will use features of Combine framework. We assume that you know about publishers, subscriptions and operators of Combine.</description>
    </item>
    
    <item>
      <title>Experimental approach of Performance of map, filter vs for-loops in Swift</title>
      <link>https://wils0n.github.io/posts/experimental-approach-of-performance-of-map-and-filter-vs-for-loops/</link>
      <pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/experimental-approach-of-performance-of-map-and-filter-vs-for-loops/</guid>
      <description>Introduction: In Swift programming there is a paradigm called functional programming. Map, filter and reduce are examples of this paradigm. In swift, we use these functions to loop over collections without using a for-loop.
The Basic Setup: Hardware: The data shown here was all generated from my personal Macbook Pro (macOS Catalina v10.15.6, 2.5 GHz Quad-Core Intel Core i5 with16 GBs 600 MHz DDR3)
Project Setup In terms of software, I used Xcode v11.</description>
    </item>
    
    <item>
      <title>Análisis de Complejidad Algorítimica</title>
      <link>https://wils0n.github.io/posts/analisis-de-complejidad-algoritimica/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/analisis-de-complejidad-algoritimica/</guid>
      <description>Introduction: La eficiencia de los algoritmos juega un papel importante en la programación competitiva. Al calcular la complejidad temporal, podemos descubrir si el algoritmo es lo suficientemente rápido para resolver un problema.
  </description>
    </item>
    
    <item>
      <title>My first post</title>
      <link>https://wils0n.github.io/posts/my-first-post/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wils0n.github.io/posts/my-first-post/</guid>
      <description>print(&amp;#34;Hello world&amp;#34;) </description>
    </item>
    
  </channel>
</rss>
